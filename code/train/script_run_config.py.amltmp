
from azureml.core import Workspace, Experiment, ScriptRunConfig, Environment
from azureml.core.compute import ComputeTarget, AmlCompute
from azureml.core.compute_target import ComputeTargetException

# Get workspace
ws = Workspace.from_config()

# Create environment
env = Environment.from_conda_specification("wine_train_env",
 'training_environment.yml')

# Create or Get Compute
compute_name = 'rohan-vm'
training_cluster = None

if compute_name in ws.compute_targets:
    training_cluster = ComputeTarget(ws, compute_name)
    print("Using existing cluster.")
else:
    try:
        compute_config = AmlCompute.provisioning_configuration(
            vm_size ='STANDARD_DS11_V2', 
            max_nodes=2 )
        training_cluster = ComputeTarget.create(ws, compute_name, compute_config)
        training_cluster.wait_for_completion(show_output=True)
    except Exception as ex:
        print(ex)
    print("Cluster created.")

# Create script config
script_config = ScriptRunConfig(
    source_directory='./',
    script='train.py',
    environment=env,
    compute_target=training_cluster)

# Run experiment
experiment_name='wine-regression-experiment'
experiment = Experiment(workspace=ws, name=experiment_name)
run = experiment.submit(config=script_config)

# Wait for experiment to complete
run.wait_for_completion()
